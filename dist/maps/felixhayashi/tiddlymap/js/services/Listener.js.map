{"version":3,"sources":["felixhayashi/tiddlymap/js/services/Listener.js"],"names":["handleCancelDialog","param","utils","setField","handleClearTiddler","paramObject","title","keep","tObj","getTiddler","originalFields","fields","fieldsToKeep","split","cloneFields","text","i","length","fieldName","$tw","wiki","deleteTiddler","addTiddler","Tiddler","handleMixTiddlers","tiddlersStringArray","tiddlers","output","parseStringArray","getMergedTiddlers","handleConfirmDialog","handleSuppressDialog","dialog","suppress","isTrue","setEntry","$tm","ref","sysUserConf","handleDownloadGraph","view","graph","adapter","getGraph","nodes","convert","edges","tRef","JSON","stringify","rootWidget","dispatchEvent","type","filename","handleConfigureSystem","allTiddlers","getMatches","selector","allPotentialNodes","allEdges","getEdgesForSet","plugin","path","pluginRoot","meta","getTiddlerData","sysMeta","hasLiveTab","liveTab","hasTag","args","numberOfNodes","numberOfEdges","Object","keys","pluginVersion","version","dataStructureVersion","dataStructureState","preselects","visDefConf","getText","visUserConf","config","sys","dialogManager","open","isConfirmed","outTObj","getPropertiesByPrefix","setTiddlerData","handleGenerateWidget","options","misc","defaultViewLabel","handleRemoveEdge","deleteEdge","handleCreateEdge","from","to","isForce","force","tiddlerExists","edge","Edge","makeNode","id","label","insertEdge","notify","handleOpenTypeManager","mode","match","topic","allTypesSelector","allEdgeTypes","typeRootPath","edgeTypes","allNodeTypes","nodeTypes","searchSelector","dialogTObj","handleLoadTypeForm","outTRef","EdgeType","getInstance","NodeType","save","usage","selectEdgesByType","count","fullPath","isShipped","vis","deleteByPrefix","handleSaveTypeForm","deleteType","saveType","dialogOutput","logger","_processEdgesWithType","action","removeNodeType","getTiddlerRef","Type","newId","newName","handleCreateType","name","platforms","after","before","synchronous","startup","addTWlisteners"],"mappings":"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","file":"../../../../../felixhayashi/tiddlymap/js/services/Listener.js","sourcesContent":["// @preserve\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/startup/listener\ntype: application/javascript\nmodule-type: startup\n\n@preserve\n\n\\*/\n\n/*** Imports *******************************************************/\n\nimport NodeType from '$:/plugins/felixhayashi/tiddlymap/js/NodeType';\nimport EdgeType from '$:/plugins/felixhayashi/tiddlymap/js/EdgeType';\nimport Edge from '$:/plugins/felixhayashi/tiddlymap/js/Edge';\nimport utils from '$:/plugins/felixhayashi/tiddlymap/js/utils';\nimport visDefConf from '$:/plugins/felixhayashi/tiddlymap/js/config/vis';\n\n/*** Code **********************************************************/\n\n/**\n * @param {Object} param - event.param\n */\nconst handleCancelDialog = ({param}) => {\n  utils.setField(param, 'text', '');\n};\n\n/**\n * @param {Object} paramObject - event.paramObject\n */\nconst handleClearTiddler = ({paramObject} = {})  => {\n\n  const {title, keep} = paramObject;\n\n  if (!title) return;\n\n  const tObj = utils.getTiddler(title);\n  const originalFields = tObj ? tObj.fields : {};\n  const fieldsToKeep = keep ? keep.split() : [];\n  const cloneFields = {\n    title,\n    text: '' // see https://github.com/Jermolene/TiddlyWiki5/issues/2025\n  };\n\n  for (let i = fieldsToKeep.length; i--;) {\n    const fieldName = fieldsToKeep[i];\n    cloneFields[fieldName] = originalFields[fieldName];\n  }\n\n  $tw.wiki.deleteTiddler(title);\n  $tw.wiki.addTiddler(new $tw.Tiddler(cloneFields));\n\n};\n\n/**\n * @param {Object} paramObject - event.paramObject\n */\nconst handleMixTiddlers = ({paramObject = {}}) => {\n\n  const {tiddlers: tiddlersStringArray, output} = paramObject;\n\n  if (!tiddlersStringArray || !output) return;\n\n  const tiddlers = $tw.utils.parseStringArray(tiddlersStringArray);\n  const tObj = utils.getMergedTiddlers(tiddlers, output);\n\n  $tw.wiki.addTiddler(tObj);\n\n};\n\n/**\n * @param {string} param - event.param\n */\nconst handleConfirmDialog = ({param}) => {\n\n  utils.setField(param, 'text', '1');\n\n};\n\n/**\n * @param {Object} paramObject - event.paramObject\n */\nconst handleSuppressDialog = ({paramObject}) => {\n\n  const {dialog, suppress} = paramObject;\n\n  if (utils.isTrue(suppress, false)) {\n    utils.setEntry($tm.ref.sysUserConf, `suppressedDialogs.${dialog}`, true);\n  }\n\n};\n\n/**\n * @param {Object} paramObject - event.paramObject\n */\nconst handleDownloadGraph = ({paramObject}) => {\n\n  const { view } = paramObject;\n  const graph = $tm.adapter.getGraph({ view });\n\n  graph.nodes = utils.convert(graph.nodes, 'array');\n  graph.edges = utils.convert(graph.edges, 'array');\n\n  const tRef = '$:/temp/tmap/export';\n\n  utils.setField(tRef, 'text', JSON.stringify(graph, null, 2));\n\n  $tw.rootWidget.dispatchEvent({\n    type: 'tm-download-file',\n    param: tRef,\n    paramObject: {\n      filename: `${view}.json`\n    }\n  });\n};\n\n/**\n *\n */\nconst handleConfigureSystem = () => {\n\n  const allTiddlers = utils.getMatches($tm.selector.allPotentialNodes);\n  const allEdges = $tm.adapter.getEdgesForSet(allTiddlers);\n  const plugin = $tw.wiki.getTiddler($tm.path.pluginRoot).fields;\n  const meta = $tw.wiki.getTiddlerData($tm.ref.sysMeta);\n  const hasLiveTab = utils.getTiddler($tm.ref.liveTab).hasTag('$:/tags/SideBar');\n\n  const args = {\n    numberOfNodes: '' + allTiddlers.length,\n    numberOfEdges: '' + Object.keys(allEdges).length,\n    pluginVersion: `v${plugin.version}`,\n    dataStructureVersion: `v${meta.dataStructureState}`,\n    dialog: {\n      preselects: {\n        'liveTab': '' + hasLiveTab,\n        'vis-inherited': JSON.stringify(visDefConf),\n        'config.vis': utils.getText($tm.ref.visUserConf),\n        'config.sys': $tm.config.sys,\n      }\n    }\n  };\n\n  $tm.dialogManager.open('globalConfig', args, (isConfirmed, outTObj) => {\n\n    if (!isConfirmed) return;\n\n    const config = utils.getPropertiesByPrefix(outTObj.fields, 'config.sys.', true);\n\n    // CAREFUL: this is a data tiddler!\n    $tw.wiki.setTiddlerData($tm.ref.sysUserConf, config);\n\n    // show or hide the live tab; to hide the live tab, we override\n    // the shadow tiddler; to show it, we remove the overlay again.\n    if (utils.isTrue(outTObj.fields.liveTab, false)) {\n      utils.setField($tm.ref.liveTab, 'tags', '$:/tags/SideBar');\n    } else {\n      $tw.wiki.deleteTiddler($tm.ref.liveTab);\n    }\n\n    // tw doesn't translate the json to an object so this is already a string\n    utils.setField($tm.ref.visUserConf, 'text', outTObj.fields['config.vis']);\n\n  });\n\n};\n\n/**\n * @param {Object} paramObject - event.paramObject\n */\nconst handleGenerateWidget = ({paramObject = {}}) => {\n\n  const options = {\n    dialog: {\n      preselects: {\n        'var.view': (paramObject.view || $tm.misc.defaultViewLabel)\n      }\n    }\n  };\n\n  $tm.dialogManager.open('widgetCodeGenerator', options);\n\n};\n\n/**\n * @param {Object} paramObject - event.paramObject\n */\nconst handleRemoveEdge = ({paramObject}) => {\n\n  $tm.adapter.deleteEdge(paramObject);\n\n};\n\n/**\n * @param {Object} paramObject - event.paramObject\n */\nconst handleCreateEdge = ({paramObject}) => {\n\n  const {from, to, force: isForce} = paramObject;\n\n  if (!from || !to) return;\n\n  if ((utils.tiddlerExists(from) && utils.tiddlerExists(to)) || isForce) {\n\n    // will not override any existing tiddlers…\n    utils.addTiddler(to);\n    utils.addTiddler(from);\n\n    const edge = new Edge(\n      $tm.adapter.makeNode(from).id,\n      $tm.adapter.makeNode(to).id,\n      paramObject.label,\n      paramObject.id\n    );\n\n    $tm.adapter.insertEdge(edge);\n    $tm.notify('Edge inserted');\n\n  }\n\n};\n\n/**\n * @param {string} type - event.type\n * @param {Object} [paramObject] - event.paramObject\n */\nconst handleOpenTypeManager = ({type, paramObject = {}}) => {\n\n  // either 'manage-edge-types' or 'manage-node-types'\n  const mode = type.match(/tmap:tm-(.*)/)[1];\n\n  if (mode === 'manage-edge-types') {\n    var topic = 'Edge-Type Manager';\n    var allTypesSelector = $tm.selector.allEdgeTypes;\n    var typeRootPath = $tm.path.edgeTypes;\n  } else {\n    var topic = 'Node-Type Manager';\n    var allTypesSelector = $tm.selector.allNodeTypes;\n    var typeRootPath = $tm.path.nodeTypes;\n  }\n\n  const args = {\n    mode: mode,\n    topic: topic,\n    searchSelector: allTypesSelector,\n    typeRootPath: typeRootPath\n  };\n\n  const dialogTObj = $tm.dialogManager.open('MapElementTypeManager', args);\n\n  if (paramObject.type) {\n    handleLoadTypeForm({\n      paramObject: {\n        mode: mode,\n        id: paramObject.type,\n        output: dialogTObj.fields['output']\n      }\n    });\n  }\n\n};\n\n/**\n * @param {string} id - The id of a {@link MapElementType}\n * @param {('manage-edge-types'|'manage-node-types')} mode\n * @param {TiddlerReference} output\n */\nconst handleLoadTypeForm = ({ paramObject: { mode, id, output } }) => {\n\n  const outTRef = output;\n  const type = (mode === 'manage-edge-types' ? EdgeType.getInstance(id) : NodeType.getInstance(id));\n\n  // inject all the type data as fields into the dialog output\n  type.save(outTRef, true);\n\n  // fields that need preprocessing\n\n  if (mode === 'manage-edge-types') {\n    const usage = $tm.adapter.selectEdgesByType(type);\n    const count = Object.keys(usage).length;\n    utils.setField(outTRef, 'temp.usageCount', count);\n  }\n\n  $tw.wiki.addTiddler(new $tw.Tiddler(\n    utils.getTiddler(outTRef),\n    {\n      'typeTRef': type.fullPath,\n      'temp.idImmutable': (type.isShipped ? 'true' : ''),\n      'temp.newId': type.id,\n      'vis-inherited': JSON.stringify($tm.config.vis)\n    }\n  ));\n\n  // reset the tabs to default\n  utils.deleteByPrefix('$:/state/tabs/MapElementTypeManager');\n\n};\n\n/**\n * @param {Object} paramObject - event.paramObject\n */\nconst handleSaveTypeForm = ({paramObject}) => {\n\n  const tObj = utils.getTiddler(paramObject.output);\n  if (!tObj) return;\n\n  const id = tObj.fields.id;\n  const mode = paramObject.mode;\n\n  if (utils.isTrue(tObj.fields['temp.deleteType'], false)) {\n    deleteType(mode, id, tObj);\n  } else {\n    saveType(mode, id, tObj);\n  }\n\n};\n\nconst deleteType = (mode, id, dialogOutput) => {\n\n  const type = (mode === 'manage-edge-types' ? EdgeType.getInstance(id) : NodeType.getInstance(id));\n\n  $tm.logger('debug', 'Deleting type', type);\n\n  if (mode === 'manage-edge-types') {\n    $tm.adapter._processEdgesWithType(type, {action: 'delete'});\n  } else {\n    $tm.adapter.removeNodeType(type);\n  }\n\n  $tw.wiki.addTiddler(new $tw.Tiddler({\n    title: utils.getTiddlerRef(dialogOutput)\n  }));\n\n  $tm.notify('Deleted type');\n\n};\n\n/**\n * @param {string} id - The id of a {@link MapElementType}\n * @param {('manage-edge-types'|'manage-node-types')} mode\n * @param {TiddlerReference} output\n */\nconst saveType = (mode, id, output) => {\n\n  const tObj = utils.getTiddler(output);\n\n  // update the type with the form data\n  const Type = (mode === 'manage-edge-types' ? EdgeType : NodeType);\n  const type = new Type(id, tObj);\n  type.save();\n\n  const newId = tObj.fields['temp.newId'];\n\n  if (newId && newId !== tObj.fields['id']) { //renamed\n\n    if (mode === 'manage-edge-types') {\n\n      $tm.adapter._processEdgesWithType(type, {\n        action: 'rename',\n        newName: newId\n      });\n\n    } else {\n\n      (new NodeType(newId, type)).save();\n      $tw.wiki.deleteTiddler(type.fullPath);\n\n    }\n\n    utils.setField(tObj, 'id', newId);\n\n  }\n\n  $tm.notify('Saved type data');\n\n};\n\n/**\n * @param {string} id - The id of a {@link MapElementType}\n * @param {('manage-edge-types'|'manage-node-types')} mode\n * @param {TiddlerReference} output\n */\nconst handleCreateType = ({ paramObject: { mode, id = 'New type', output } }) => {\n\n  const type = (mode === 'manage-edge-types' ? new EdgeType(id) : new NodeType(id));\n\n  type.save();\n\n  handleLoadTypeForm({ paramObject: { id: type.id, mode, output } });\n\n};\n\n/*** Exports *******************************************************/\n\nexport const name = 'tmap.listener';\nexport const platforms = [ 'browser' ];\nexport const after = [ 'rootwidget', 'tmap.caretaker' ];\nexport const before = [ 'story' ];\nexport const synchronous = true;\nexport const startup = () => {\n  utils.addTWlisteners({\n    'tmap:tm-remove-edge': handleRemoveEdge,\n    'tmap:tm-load-type-form': handleLoadTypeForm,\n    'tmap:tm-save-type-form': handleSaveTypeForm,\n    'tmap:tm-create-type': handleCreateType,\n    'tmap:tm-create-edge': handleCreateEdge,\n    'tmap:tm-suppress-dialog': handleSuppressDialog,\n    'tmap:tm-generate-widget': handleGenerateWidget,\n    'tmap:tm-download-graph': handleDownloadGraph,\n    'tmap:tm-configure-system': handleConfigureSystem,\n    'tmap:tm-manage-edge-types': handleOpenTypeManager,\n    'tmap:tm-manage-node-types': handleOpenTypeManager,\n    'tmap:tm-cancel-dialog': handleCancelDialog,\n    'tmap:tm-clear-tiddler': handleClearTiddler,\n    'tmap:tm-merge-tiddlers': handleMixTiddlers,\n    'tmap:tm-confirm-dialog': handleConfirmDialog\n  }, $tw.rootWidget, this);\n};\n"],"sourceRoot":"../../../../../../src/plugins"}