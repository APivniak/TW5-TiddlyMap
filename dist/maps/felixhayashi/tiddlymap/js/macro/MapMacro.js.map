{"version":3,"sources":["felixhayashi/tiddlymap/js/macro/MapMacro.js"],"names":["name","params","getParamSlots","run","substVarRefs","substituteVariableReferences","fn","command","arguments","result","args","Array","prototype","slice","call","apply","maxArgs","arr","i","push","utils","makeHashMap","basename","separator","str","getVariable","getBasename","datauri","tiddler","type","getDataUri","testJSON","fieldName","tObj","$tw","wiki","getTiddler","JSON","parse","fields","SyntaxError","splitAndSelect","index","split","concat","l","length","uuid","genUUID","regRepl","oldStr","regStr","newStr","regFlags","replace","RegExp","halfOfString","substr","Math","ceil","isETyVisible","view","userInput","ViewAbstraction","id","getETyId","isEdgeTypeVisible","EdgeType","getInstance","namespace","getIdParts","marker","getConfig","getId","scale","parseInt","mergeFields","prefix","getPropertiesByPrefix","option","path","unit","$tm","prop","propertyPath","hasSubString","lastIndexOf"],"mappings":"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","file":"../../../../../felixhayashi/tiddlymap/js/macro/MapMacro.js","sourcesContent":["// @preserve\n/*\\\ntitle: $:/plugins/felixhayashi/tiddlymap/js/macro/tmap\ntype: application/javascript\nmodule-type: macro\n\n@preserve\n\n\\*/\n\n/*** Imports *******************************************************/\n\nimport EdgeType        from '$:/plugins/felixhayashi/tiddlymap/js/EdgeType';\nimport ViewAbstraction from '$:/plugins/felixhayashi/tiddlymap/js/ViewAbstraction';\nimport utils           from '$:/plugins/felixhayashi/tiddlymap/js/utils';\n\n/*** Code **********************************************************/\n\nconst name = 'tmap';\nconst params = getParamSlots(5);\n\n/**\n * @this MacroCallWidget\n * @return {string} the result of the operation or an empty string.\n * @private\n */\nfunction run() {\n\n  this.substVarRefs = this.substituteVariableReferences;\n\n  const fn = command[arguments[0]];\n  let result = null;\n\n  if (typeof fn === 'function') {\n    const args = Array.prototype.slice.call(arguments,1);\n    result = fn.apply(this, args);\n  }\n\n  return (typeof result === 'string' ? result : '');\n\n}\n\n/**\n * unfortunately tw forces us to specify params in advance so I\n * will reserve some argument slots here.\n * @private\n */\nfunction getParamSlots(maxArgs) {\n\n  const arr = [];\n  for (let i = 0; i < maxArgs; i++) {\n    arr.push({ name : ('arg' + i) });\n  }\n\n  return arr;\n\n}\n\n/**\n * In connection with tiddlymap, this macro allows us to access\n * system information from within tiddlers as well as to execute\n * some util functions.\n *\n * Every command will be called with `this` pointing to the current\n * MacroCallWidget instance!\n *\n * @private\n */\nvar command = utils.makeHashMap();\n\n/**\n * Returns the basename of the string\n *\n * @see {@link utils.basename}\n */\ncommand.basename = function(separator) {\n\n  var str = this.getVariable('currentTiddler');\n  return utils.getBasename(str, separator);\n\n};\n\n/**\n * TW messes with svg urls so we always use base64 encoding when\n * a data uri is requested as macro call\n */\ncommand.datauri = function(tiddler, type) {\n\n  return utils.getDataUri(tiddler, type, true);\n\n};\n\ncommand.testJSON = function(fieldName) {\n\n  var tObj = $tw.wiki.getTiddler(this.getVariable('currentTiddler'));\n\n  try {\n    JSON.parse(tObj.fields[fieldName]);\n    return 'valid';\n  } catch (SyntaxError) {\n    return 'malformed';\n  }\n\n};\n\ncommand.splitAndSelect = function(separator, index) {\n\n  var str = this.getVariable('currentTiddler');\n  var result = str.split(separator)[index];\n\n  return (result != null ? result : str);\n\n};\n\ncommand.concat = function() {\n\n  var str = '';\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    str += arguments[i];\n  }\n  return str;\n\n};\n\ncommand.uuid = function() {\n\n  return utils.genUUID();\n\n};\n\ncommand.regRepl = function() {\n\n  var oldStr = this.substVarRefs(arguments[0]);\n  var regStr = arguments[1];\n  var newStr = this.substVarRefs(arguments[2]);\n  var regFlags = this.substVarRefs(arguments[4]);\n\n  return oldStr.replace(new RegExp(regStr, regFlags), newStr);\n\n};\n\ncommand.halfOfString = function() {\n\n  var str = this.substVarRefs(arguments[0]);\n\n  if (!str) {\n    return '';\n  }\n\n  return str.substr(0, Math.ceil(str.length / 2));\n\n};\n\ncommand.isETyVisible = function(view, userInput) {\n\n  view = new ViewAbstraction(view);\n\n  const id = command.getETyId.call(this, view, userInput);\n\n  return '' + view.isEdgeTypeVisible(id);\n\n};\n\ncommand.getETyId = function(view, userInput) {\n\n  view = new ViewAbstraction(view);\n\n  let type = EdgeType.getInstance(userInput || this.getVariable('currentTiddler'));\n\n  if (!type.namespace) {\n\n    const { marker, name } = EdgeType.getIdParts(type.id);\n    const namespace = view.getConfig('edge_type_namespace');\n\n    type = EdgeType.getInstance(EdgeType.getId(marker, namespace, name));\n\n  }\n\n  return type.id;\n\n};\n\ncommand.scale = function() {\n\n  var str = '';\n  for (var i = 1, l = parseInt(arguments[0]); i < l; i++) {\n    str += '[[' + i + ']]';\n  }\n  return str;\n\n};\n\ncommand.mergeFields = function() {\n\n  var tObj = utils.getTiddler(arguments[0]);\n  var prefix = arguments[1];\n  var separator = arguments[2] || ' ';\n\n  if (!tObj) return;\n\n  var fields = utils.getPropertiesByPrefix(tObj.fields, prefix);\n  var str = '';\n  for (var name in fields) {\n\n    if (typeof fields[name] === 'string') {\n\n      str += fields[name] + separator;\n    }\n  }\n  return str;\n\n};\n\ncommand.option = function(path, unit) {\n\n  if (typeof $tm == \"undefined\") {\n    // this macro is referenced from css which means we cannot\n    // expect $tm to exist, e.g when rendering static css\n    // @see https://github.com/felixhayashi/TW5-TiddlyMap/issues/257#issuecomment-427343226\n    return '';\n  }\n\n  var prop = $tm;\n  var propertyPath = path.split('.');\n\n  for (var i = 0; i < propertyPath.length; i++) {\n    if (typeof prop == 'object' && prop[propertyPath[i]]) {\n      prop = prop[propertyPath[i]];\n    }\n  }\n\n  // TODO: ugly, use regex\n  if (unit && typeof prop === 'string'\n     && utils.hasSubString(unit)\n     && (prop.lastIndexOf(unit) + unit.length) === prop.length) {\n    prop = prop + unit;\n  }\n\n  return prop;\n\n};\n\n/*** Exports *******************************************************/\n\nexport { run, name, params };\n"],"sourceRoot":"../../../../../../src/plugins"}